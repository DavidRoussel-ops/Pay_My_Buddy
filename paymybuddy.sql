
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

DROP DATABASE IF EXISTS paymybuddy;

CREATE DATABASE paymybuddy;

USE paymybuddy;

DROP TABLE IF EXISTS USER;

CREATE TABLE USER (
ID int PRIMARY KEY AUTO_INCREMENT NOT NULL,
USERNAME VARCHAR(100) NOT NULL,
EMAIL VARCHAR(255) NOT NULL,
PASSWORD VARCHAR(255) NOT NULL
);

LOCK TABLES USER WRITE;

INSERT INTO USER(ID,USERNAME,EMAIL,PASSWORD) VALUES
(1,'Jaques', 'jaques@gmail.com', 'jaquespassword'),
(2,'Pierre', 'pierre@gmail.com', 'pierrepassword'),
(3,'Jean', 'jean@gmail.com', 'jeanpassword'),
(4,'Michel', 'michel@gmail.com', 'michelpassword');

UNLOCK TABLES;

DROP TABLES IF EXISTS TRANSACTION;

CREATE TABLE TRANSACTION (
ID int PRIMARY KEY AUTO_INCREMENT NOT NULL,
DESCRIPTION VARCHAR(255) NOT NULL,
AMOUNT DOUBLE NOT NULL
);

LOCK TABLES TRANSACTION WRITE;

INSERT INTO TRANSACTION(ID,DESCRIPTION, AMOUNT) VALUES
(1,'restaurant', 25),
(2,'magasin', 30),
(3,'note de frais', 50);

UNLOCK TABLES;

DROP TABLES IF EXISTS USER_FRIENDS;

CREATE TABLE USER_FRIENDS (
USER_FRIEND_ID int NOT NULL,
FOREIGN KEY (USER_FRIEND_ID)
REFERENCES USER(ID) ON DELETE RESTRICT ON UPDATE CASCADE,
PRIMARY KEY (USER_FRIEND_ID));

LOCK TABLES USER_FRIENDS WRITE;

INSERT INTO USER_FRIENDS(USER_FRIEND_ID) VALUES
(1),
(2),
(3),
(4);

UNLOCK TABLES;

DROP TABLES IF EXISTS USER_TRANSACTION_RECEIVER;

CREATE TABLE USER_TRANSACTION_RECEIVER (
USER_ID int NOT NULL,
TRANSACTION_ID int NOT NULL,
FOREIGN KEY(USER_ID)
REFERENCES USER(ID) ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(TRANSACTION_ID)
REFERENCES TRANSACTION(ID) ON DELETE RESTRICT ON UPDATE CASCADE,
PRIMARY KEY (USER_ID, TRANSACTION_ID));

LOCK TABLES USER_TRANSACTION_RECEIVER WRITE;

INSERT INTO USER_TRANSACTION_RECEIVER(USER_ID, TRANSACTION_ID) VALUES
(3, 3),
(1, 1),
(2, 2);

UNLOCK TABLES;

DROP TABLES IF EXISTS USER_TRANSACTION_SENDER;

CREATE TABLE USER_TRANSACTION_SENDER (
USER_ID int NOT NULL,
TRANSACTION_ID int NOT NULL,
FOREIGN KEY(USER_ID)
REFERENCES USER(ID) ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(TRANSACTION_ID)
REFERENCES TRANSACTION(ID) ON DELETE RESTRICT ON UPDATE CASCADE,
PRIMARY KEY (USER_ID, TRANSACTION_ID));;

LOCK TABLES USER_TRANSACTION_SENDER WRITE;

INSERT INTO USER_TRANSACTION_SENDER(USER_ID, TRANSACTION_ID) VALUES
(1, 3),
(2, 1),
(3, 2);

UNLOCK TABLES;

COMMIT;